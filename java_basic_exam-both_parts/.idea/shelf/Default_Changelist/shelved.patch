Index: .gitignore
===================================================================
diff --git a/.gitignore b/.gitignore
deleted file mode 100644
--- a/.gitignore	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ /dev/null	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
@@ -1,2 +0,0 @@
-# Project exclude paths
-/target/
\ No newline at end of file
Index: src/test/java/com/epam/infra/ApplicationContextTest.java
===================================================================
diff --git a/src/test/java/com/epam/infra/ApplicationContextTest.java b/src/test/java/com/epam/infra/ApplicationContextTest.java
deleted file mode 100644
--- a/src/test/java/com/epam/infra/ApplicationContextTest.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ /dev/null	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
@@ -1,17 +0,0 @@
-package com.epam.infra;
-
-import org.junit.Assert;
-import org.junit.Test;
-
-/**
- * @author Evgeny Borisov
- */
-public class ApplicationContextTest {
-
-    @Test
-    public void getObject() {
-        ApplicationContext context = new ApplicationContext(JavaConfig.builder().packagesToScan("com.epam.infra").build());
-        PersonService personService = context.getObject(PersonService.class);
-        Assert.assertNotNull(personService.repo);
-    }
-}
\ No newline at end of file
Index: src/test/java/com/epam/producer/IntegrationTestForProducer.java
===================================================================
diff --git a/src/test/java/com/epam/producer/IntegrationTestForProducer.java b/src/test/java/com/epam/producer/IntegrationTestForProducer.java
deleted file mode 100644
--- a/src/test/java/com/epam/producer/IntegrationTestForProducer.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ /dev/null	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
@@ -1,25 +0,0 @@
-package com.epam.producer;
-
-import com.epam.common.model.Quote;
-import com.epam.infra.ApplicationContext;
-import com.epam.infra.JavaConfig;
-import com.epam.producer.services.QuoteProducer;
-import org.junit.Assert;
-import org.junit.Test;
-
-/**
- * @author Evgeny Borisov
- */
-public class IntegrationTestForProducer {
-
-    @Test
-    public void testGetQuote() {
-        ApplicationContext context = new ApplicationContext(JavaConfig.builder().packagesToScan("com.epam").build());
-        QuoteProducer producer = context.getObject(QuoteProducer.class);
-        Quote quote = producer.generate();
-        Assert.assertNotNull(quote);
-        Assert.assertNotNull(quote.getText());
-        Assert.assertNotNull(quote.getStatus());
-        Assert.assertNotEquals(0, quote.getId());
-    }
-}
Index: src/main/java/com/epam/infra/PersonAssist.java
===================================================================
diff --git a/src/main/java/com/epam/infra/PersonAssist.java b/src/main/java/com/epam/infra/PersonAssist.java
deleted file mode 100644
--- a/src/main/java/com/epam/infra/PersonAssist.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ /dev/null	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
@@ -1,7 +0,0 @@
-package com.epam.infra;
-
-/**
- * @author Evgeny Borisov
- */
-public class PersonAssist {
-}
Index: src/main/java/com/epam/infra/PersonHolder.java
===================================================================
diff --git a/src/main/java/com/epam/infra/PersonHolder.java b/src/main/java/com/epam/infra/PersonHolder.java
deleted file mode 100644
--- a/src/main/java/com/epam/infra/PersonHolder.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ /dev/null	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
@@ -1,7 +0,0 @@
-package com.epam.infra;
-
-/**
- * @author Evgeny Borisov
- */
-public class PersonHolder {
-}
Index: src/main/java/com/epam/infra/PersonManager.java
===================================================================
diff --git a/src/main/java/com/epam/infra/PersonManager.java b/src/main/java/com/epam/infra/PersonManager.java
deleted file mode 100644
--- a/src/main/java/com/epam/infra/PersonManager.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ /dev/null	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
@@ -1,7 +0,0 @@
-package com.epam.infra;
-
-/**
- * @author Evgeny Borisov
- */
-public class PersonManager {
-}
Index: src/main/java/com/epam/infra/PersonRepo.java
===================================================================
diff --git a/src/main/java/com/epam/infra/PersonRepo.java b/src/main/java/com/epam/infra/PersonRepo.java
deleted file mode 100644
--- a/src/main/java/com/epam/infra/PersonRepo.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ /dev/null	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
@@ -1,7 +0,0 @@
-package com.epam.infra;
-
-/**
- * @author Evgeny Borisov
- */
-public interface PersonRepo {
-}
Index: src/main/java/com/epam/infra/PersonRepoImpl.java
===================================================================
diff --git a/src/main/java/com/epam/infra/PersonRepoImpl.java b/src/main/java/com/epam/infra/PersonRepoImpl.java
deleted file mode 100644
--- a/src/main/java/com/epam/infra/PersonRepoImpl.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ /dev/null	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
@@ -1,7 +0,0 @@
-package com.epam.infra;
-
-/**
- * @author Evgeny Borisov
- */
-public class PersonRepoImpl implements PersonRepo {
-}
Index: src/test/java/com/epam/infra/PersonService.java
===================================================================
diff --git a/src/test/java/com/epam/infra/PersonService.java b/src/test/java/com/epam/infra/PersonService.java
deleted file mode 100644
--- a/src/test/java/com/epam/infra/PersonService.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ /dev/null	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
@@ -1,22 +0,0 @@
-package com.epam.infra;
-
-/**
- * @author Evgeny Borisov
- */
-public class PersonService {
-
-    PersonRepo repo;
-    PersonAssist assist;
-    @InjectByType
-    PersonHolder holder;
-
-    @InjectRandomInt(min = 2,max = 19)
-    private int stamId;
-
-    private PersonManager personManager;
-
-    public PersonService(PersonRepo repo, PersonAssist assist) {
-        this.repo = repo;
-        this.assist = assist;
-    }
-}
Index: src/test/java/com/epam/producer/QuoteProducerImplTest.java
===================================================================
diff --git a/src/test/java/com/epam/producer/QuoteProducerImplTest.java b/src/test/java/com/epam/producer/QuoteProducerImplTest.java
deleted file mode 100644
--- a/src/test/java/com/epam/producer/QuoteProducerImplTest.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ /dev/null	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
@@ -1,46 +0,0 @@
-package com.epam.producer;
-
-import com.epam.common.model.Quote;
-import com.epam.common.model.QuoteStatus;
-import com.epam.producer.services.IdGenerator;
-import com.epam.producer.services.QuoteProducer;
-import com.epam.producer.services.QuoteProducerImpl;
-import com.epam.producer.services.QuoterService;
-import org.junit.Assert;
-import org.junit.Test;
-import org.mockito.Mockito;
-
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.when;
-
-/**
- * @author Evgeny Borisov
- */
-public class QuoteProducerImplTest {
-
-    @Test
-    public void testThatProducerCanGenerateQuote() {
-
-        IdGenerator idGeneratorMock = mock(IdGenerator.class);
-
-        when(idGeneratorMock.getNewId()).thenReturn(10L);
-
-        QuoterService quoterServiceMock = mock(QuoterService.class);
-
-        when(quoterServiceMock.getRandomQuoteText()).thenReturn("I'll be back");
-
-        QuoteProducer producer = new QuoteProducerImpl(idGeneratorMock,quoterServiceMock);
-
-
-        Quote quote = producer.generate();
-        Assert.assertNotNull(quote);
-        Assert.assertNotNull(quote.getText());
-        Assert.assertNotNull(quote.getStatus());
-        Assert.assertNotEquals(0, quote.getId());
-
-        if (quote.getText().length() < 10) {
-            Assert.assertSame(quote.getStatus(), QuoteStatus.SMALL);
-        }
-
-    }
-}
\ No newline at end of file
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>producer_output_location = c:/tmp/producer_output/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ b/src/main/resources/application.properties	(date 1620320562965)
@@ -1,1 +1,3 @@
-producer_output_location = c:/tmp/producer_output/
\ No newline at end of file
+producer_output_location = c:/tmp/producer_output/
+json_output_location=c:/tmp/json_output/
+delay_bewteen_runs=10000
\ No newline at end of file
Index: src/main/java/com/epam/collectToJasonLib/flow/RunnableTransferToJsonAndCopyFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/epam/collectToJasonLib/flow/RunnableTransferToJsonAndCopyFile.java b/src/main/java/com/epam/collectToJasonLib/flow/RunnableTransferToJsonAndCopyFile.java
new file mode 100644
--- /dev/null	(date 1620331099041)
+++ b/src/main/java/com/epam/collectToJasonLib/flow/RunnableTransferToJsonAndCopyFile.java	(date 1620331099041)
@@ -0,0 +1,25 @@
+package com.epam.collectToJasonLib.flow;
+
+import com.epam.collectToJasonLib.services.QuoteReader;
+import com.epam.collectToJasonLib.services.QuoteReaderFomFile;
+import com.epam.collectToJasonLib.services.QuoteWriter;
+import com.epam.collectToJasonLib.services.QuoteWriterToJsonFile;
+import com.epam.common.model.Quote;
+
+public class RunnableTransferToJsonAndCopyFile extends Thread {
+    String inputFileFullPath;
+    String outputFileFullPath;
+
+
+    RunnableTransferToJsonAndCopyFile(String inputFileFullPath,String outputFileFullPath) {
+        this.inputFileFullPath=inputFileFullPath;
+        this.outputFileFullPath=outputFileFullPath;
+    }
+
+    @Override
+    public void run() {
+        //מימשתי בלי לטעון מאובג'קט פאקטורי כדי לא לטעון מחדש מבחינת ביצועים מול יתרונות
+        Quote quote=new QuoteReaderFomFile().readQuote(inputFileFullPath);
+        new QuoteWriterToJsonFile().writeToFile(quote,outputFileFullPath);
+    }
+}
Index: src/main/java/com/epam/collectToJasonLib/services/QuoteWriterToJsonFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/epam/collectToJasonLib/services/QuoteWriterToJsonFile.java b/src/main/java/com/epam/collectToJasonLib/services/QuoteWriterToJsonFile.java
new file mode 100644
--- /dev/null	(date 1620329472564)
+++ b/src/main/java/com/epam/collectToJasonLib/services/QuoteWriterToJsonFile.java	(date 1620329472564)
@@ -0,0 +1,30 @@
+package com.epam.collectToJasonLib.services;
+
+import com.epam.common.model.Quote;
+import com.epam.producer.services.InjectValue;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.ObjectWriter;
+import lombok.Getter;
+import lombok.SneakyThrows;
+
+import java.nio.charset.StandardCharsets;
+import java.nio.file.Files;
+import java.nio.file.Paths;
+
+public class QuoteWriterToJsonFile implements QuoteWriter {
+
+    @Getter
+    @InjectValue("json_output_location")
+    private String json_output_location;
+
+    @SneakyThrows
+    @Override
+    public void writeToFile(Quote quote,String fileName) {
+        ObjectMapper mapper = new ObjectMapper();
+        ObjectWriter ow = new ObjectMapper().writer().withDefaultPrettyPrinter();
+        String jsonText = ow.writeValueAsString(quote);
+        Files.write(Paths.get(fileName),jsonText.getBytes(StandardCharsets.UTF_8));
+    }
+
+
+}
Index: src/main/java/com/epam/collectToJasonLib/services/QuoteWriter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/epam/collectToJasonLib/services/QuoteWriter.java b/src/main/java/com/epam/collectToJasonLib/services/QuoteWriter.java
new file mode 100644
--- /dev/null	(date 1620320782847)
+++ b/src/main/java/com/epam/collectToJasonLib/services/QuoteWriter.java	(date 1620320782847)
@@ -0,0 +1,7 @@
+package com.epam.collectToJasonLib.services;
+
+import com.epam.common.model.Quote;
+
+public interface QuoteWriter {
+    public void writeToFile(Quote quote,String path);
+}
Index: src/main/java/com/epam/producer/MainProducer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.epam.producer;\r\n\r\nimport com.epam.infra.ApplicationContext;\r\nimport com.epam.infra.JavaConfig;\r\nimport com.epam.producer.flow.QuoterProducerFlowManager;\r\nimport com.epam.producer.services.QuoteProducerImpl;\r\nimport com.epam.producer.services.QuoterSaverImpl;\r\n\r\n/**\r\n * @author Evgeny Borisov\r\n */\r\npublic class MainProducer {\r\n    public static void main(String[] args) {\r\n\r\n        ApplicationContext context = new ApplicationContext(JavaConfig.builder().packagesToScan(\"com.epam\").build());\r\n        QuoterProducerFlowManager flowManager = context.getObject(QuoterProducerFlowManager.class);\r\n        flowManager.saveQuote();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/epam/producer/MainProducer.java b/src/main/java/com/epam/producer/MainProducer.java
--- a/src/main/java/com/epam/producer/MainProducer.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ b/src/main/java/com/epam/producer/MainProducer.java	(date 1620302764193)
@@ -1,17 +1,18 @@
 package com.epam.producer;
-
-import com.epam.infra.ApplicationContext;
+import  com.epam.infra.ApplicationContext;
+
 import com.epam.infra.JavaConfig;
 import com.epam.producer.flow.QuoterProducerFlowManager;
 import com.epam.producer.services.QuoteProducerImpl;
 import com.epam.producer.services.QuoterSaverImpl;
 
+import java.io.File;
+
 /**
  * @author Evgeny Borisov
  */
 public class MainProducer {
     public static void main(String[] args) {
-
         ApplicationContext context = new ApplicationContext(JavaConfig.builder().packagesToScan("com.epam").build());
         QuoterProducerFlowManager flowManager = context.getObject(QuoterProducerFlowManager.class);
         flowManager.saveQuote();
Index: src/main/java/com/epam/collectToJasonLib/services/QuoteReaderFomFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/epam/collectToJasonLib/services/QuoteReaderFomFile.java b/src/main/java/com/epam/collectToJasonLib/services/QuoteReaderFomFile.java
new file mode 100644
--- /dev/null	(date 1620320782885)
+++ b/src/main/java/com/epam/collectToJasonLib/services/QuoteReaderFomFile.java	(date 1620320782885)
@@ -0,0 +1,24 @@
+package com.epam.collectToJasonLib.services;
+
+import com.epam.common.model.Quote;
+import com.epam.producer.services.InjectValue;
+import lombok.Data;
+import lombok.SneakyThrows;
+
+import java.io.*;
+
+@Data
+public class QuoteReaderFomFile implements QuoteReader{
+
+    @InjectValue("producer_output_location")
+    private String inputDir;
+
+
+    @SneakyThrows
+    @Override
+    public Quote readQuote(String path) {
+        FileInputStream fileIn = new FileInputStream(path);
+        ObjectInputStream in = new ObjectInputStream(fileIn);
+        return (Quote)in.readObject();
+    }
+}
Index: src/main/java/com/epam/collectToJasonLib/services/QuoteReader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/epam/collectToJasonLib/services/QuoteReader.java b/src/main/java/com/epam/collectToJasonLib/services/QuoteReader.java
new file mode 100644
--- /dev/null	(date 1620320782876)
+++ b/src/main/java/com/epam/collectToJasonLib/services/QuoteReader.java	(date 1620320782876)
@@ -0,0 +1,7 @@
+package com.epam.collectToJasonLib.services;
+
+import com.epam.common.model.Quote;
+
+public interface QuoteReader {
+    public Quote readQuote(String path);
+}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>java_basic_exam</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.reflections</groupId>\r\n            <artifactId>reflections</artifactId>\r\n            <version>0.9.12</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.20</version>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>4.13</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n\r\n\r\n        <dependency>\r\n            <groupId>org.mockito</groupId>\r\n            <artifactId>mockito-all</artifactId>\r\n            <version>1.10.19</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <configuration>\r\n                    <source>11</source>\r\n                    <target>11</target>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ b/pom.xml	(date 1620308243514)
@@ -7,6 +7,27 @@
     <groupId>org.example</groupId>
     <artifactId>java_basic_exam</artifactId>
     <version>1.0-SNAPSHOT</version>
+    <build>
+
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>6</source>
+                    <target>6</target>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>11</source>
+                    <target>11</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
 
 
     <dependencies>
@@ -36,19 +57,15 @@
             <version>1.10.19</version>
             <scope>test</scope>
         </dependency>
+
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+            <version>2.9.8</version>
+        </dependency>
     </dependencies>
 
 
-    <build>
-        <plugins>
-            <plugin>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <configuration>
-                    <source>11</source>
-                    <target>11</target>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
+
 
 </project>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1620303704450)
+++ b/.idea/uiDesigner.xml	(date 1620303704450)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/com/epam/collectToJasonLib/flow/TransferToJsonLib.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/epam/collectToJasonLib/flow/TransferToJsonLib.java b/src/main/java/com/epam/collectToJasonLib/flow/TransferToJsonLib.java
new file mode 100644
--- /dev/null	(date 1620330886386)
+++ b/src/main/java/com/epam/collectToJasonLib/flow/TransferToJsonLib.java	(date 1620330886386)
@@ -0,0 +1,50 @@
+package com.epam.collectToJasonLib.flow;
+
+import com.epam.collectToJasonLib.services.LibrariesManage;
+import com.epam.collectToJasonLib.services.QuoteReader;
+import com.epam.collectToJasonLib.services.QuoteWriter;
+import com.epam.common.model.Quote;
+import lombok.AllArgsConstructor;
+
+import java.io.File;
+
+@AllArgsConstructor
+public class TransferToJsonLib {
+
+    private QuoteReader quoteReader;
+    private QuoteWriter quoteWriter;
+    private LibrariesManage libs;
+
+
+   public void runTransferAndCopy(boolean isMultiThread){
+        if (isMultiThread) {
+            multiThreadTransfer();
+            return;
+        }
+        String[] paths = getRelevantPaths(libs.getInputDir());
+        for (String path:paths) {
+            Quote quote=quoteReader.readQuote(libs.getInputDir() + path);
+            quoteWriter.writeToFile(quote, libs.getJson_output_location() + path);
+
+        }
+
+    }
+
+
+
+    private void multiThreadTransfer(){
+        String[] paths = getRelevantPaths(libs.getInputDir());
+        for (String path:paths) {
+           new RunnableTransferToJsonAndCopyFile(libs.getInputDir()+path, libs.getJson_output_location()+path).run();
+
+        }
+
+    }
+    private String[] getRelevantPaths(String folderPath) {
+            File f = new File(folderPath);
+            return f.list();
+    }
+}
+
+
+
Index: src/main/java/com/epam/collectToJasonLib/MainCollectToJasonLib.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/epam/collectToJasonLib/MainCollectToJasonLib.java b/src/main/java/com/epam/collectToJasonLib/MainCollectToJasonLib.java
new file mode 100644
--- /dev/null	(date 1620323835463)
+++ b/src/main/java/com/epam/collectToJasonLib/MainCollectToJasonLib.java	(date 1620323835463)
@@ -0,0 +1,25 @@
+package com.epam.collectToJasonLib;
+
+import com.epam.collectToJasonLib.flow.TransferToJsonLib;
+import com.epam.infra.ApplicationContext;
+import com.epam.infra.JavaConfig;
+import lombok.SneakyThrows;
+
+public class MainCollectToJasonLib {
+
+    @SneakyThrows
+    public static void main(String[] args) {
+        ApplicationContext context = new ApplicationContext(JavaConfig.builder().packagesToScan("com.epam").build());
+        TransferToJsonLib jsonCollector = context.getObject(TransferToJsonLib.class);
+
+        while (true){
+            jsonCollector.runTransferAndCopy(true);
+            Thread.sleep(10000);
+        }
+
+    }
+
+
+
+
+}
Index: src/main/java/com/epam/collectToJasonLib/services/LibrariesManage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/epam/collectToJasonLib/services/LibrariesManage.java b/src/main/java/com/epam/collectToJasonLib/services/LibrariesManage.java
new file mode 100644
--- /dev/null	(date 1620320782834)
+++ b/src/main/java/com/epam/collectToJasonLib/services/LibrariesManage.java	(date 1620320782834)
@@ -0,0 +1,15 @@
+package com.epam.collectToJasonLib.services;
+
+import com.epam.producer.services.InjectValue;
+import lombok.Data;
+import lombok.Getter;
+
+@Data
+public class LibrariesManage {
+
+    @InjectValue("producer_output_location")
+    private String inputDir;
+
+    @InjectValue("json_output_location")
+    private String json_output_location;
+}
Index: src/main/java/com/epam/infra/InjectValueAnnotationObjectConfigurator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.epam.infra;\r\n\r\nimport com.epam.producer.services.InjectValue;\r\nimport lombok.SneakyThrows;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\nimport java.lang.reflect.Field;\r\nimport java.net.URI;\r\nimport java.net.URL;\r\nimport java.util.Map;\r\nimport java.util.stream.Collectors;\r\n\r\n/**\r\n * @author Evgeny Borisov\r\n */\r\npublic class InjectValueAnnotationObjectConfigurator implements ObjectConfigurator {\r\n\r\n    private Map<String,String> propertyMap;\r\n\r\n    @SneakyThrows\r\n    public InjectValueAnnotationObjectConfigurator() {\r\n        URI uri = ClassLoader.getSystemClassLoader().getResource(\"application.properties\").toURI();\r\n        File file = new File(uri);\r\n        propertyMap = new BufferedReader(new FileReader(file)).lines()\r\n                .map(line -> line.split(\"=\"))\r\n                .collect(Collectors.toMap(arr -> arr[0].trim(), arr -> arr[1].trim()));\r\n    }\r\n\r\n    @Override\r\n    @SneakyThrows\r\n    public void configure(ApplicationContext context, Object t) {\r\n        Field[] fields = t.getClass().getDeclaredFields();\r\n        for (Field field : fields) {\r\n            InjectValue annotation = field.getAnnotation(InjectValue.class);\r\n            if (annotation != null) {\r\n                String propertyName = annotation.value();\r\n                field.setAccessible(true);\r\n                field.set(t,propertyMap.get(propertyName));\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/epam/infra/InjectValueAnnotationObjectConfigurator.java b/src/main/java/com/epam/infra/InjectValueAnnotationObjectConfigurator.java
--- a/src/main/java/com/epam/infra/InjectValueAnnotationObjectConfigurator.java	(revision 1b482b5549148ddd6be31a9360ce1b9223312327)
+++ b/src/main/java/com/epam/infra/InjectValueAnnotationObjectConfigurator.java	(date 1620320154864)
@@ -20,6 +20,7 @@
     private Map<String,String> propertyMap;
 
     @SneakyThrows
+
     public InjectValueAnnotationObjectConfigurator() {
         URI uri = ClassLoader.getSystemClassLoader().getResource("application.properties").toURI();
         File file = new File(uri);
Index: java_basic_exam-hw.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/java_basic_exam-hw.iml b/java_basic_exam-hw.iml
new file mode 100644
--- /dev/null	(date 1620308382549)
+++ b/java_basic_exam-hw.iml	(date 1620308382549)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.reflections:reflections:0.9.12" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.26.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: junit:junit:4.13" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.mockito:mockito-all:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.9.8" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.9.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.9.8" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_9_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_9_8.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_9_8.xml
new file mode 100644
--- /dev/null	(date 1620307869355)
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_9_8.xml	(date 1620307869355)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-databind:2.9.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/application.properties b/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1620320562965)
+++ b/target/classes/application.properties	(date 1620320562965)
@@ -0,0 +1,3 @@
+producer_output_location = c:/tmp/producer_output/
+json_output_location=c:/tmp/json_output/
+delay_bewteen_runs=10000
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_9_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_9_8.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_9_8.xml
new file mode 100644
--- /dev/null	(date 1620307869347)
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_9_8.xml	(date 1620307869347)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-core:2.9.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_9_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_9_0.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_9_0.xml
new file mode 100644
--- /dev/null	(date 1620307869339)
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_9_0.xml	(date 1620307869339)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.9.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1620153171089)
+++ b/.idea/.gitignore	(date 1620153171089)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1620153170633)
+++ b/.idea/jarRepositories.xml	(date 1620153170633)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1620331942304)
+++ b/.idea/compiler.xml	(date 1620331942304)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="java_basic_exam-hw" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="java_basic_exam-hw" target="11" />
+    </bytecodeTargetLevel>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1620153170540)
+++ b/.idea/vcs.xml	(date 1620153170540)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1620295882715)
+++ b/.idea/misc.xml	(date 1620295882715)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK" />
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_reflections_reflections_0_9_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_reflections_reflections_0_9_12.xml b/.idea/libraries/Maven__org_reflections_reflections_0_9_12.xml
new file mode 100644
--- /dev/null	(date 1620295882698)
+++ b/.idea/libraries/Maven__org_reflections_reflections_0_9_12.xml	(date 1620295882698)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.reflections:reflections:0.9.12">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/reflections/reflections/0.9.12/reflections-0.9.12.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/reflections/reflections/0.9.12/reflections-0.9.12-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/reflections/reflections/0.9.12/reflections-0.9.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml b/.idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml
new file mode 100644
--- /dev/null	(date 1620295882687)
+++ b/.idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml	(date 1620295882687)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.projectlombok:lombok:1.18.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.20/lombok-1.18.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.20/lombok-1.18.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.20/lombok-1.18.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mockito_mockito_all_1_10_19.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mockito_mockito_all_1_10_19.xml b/.idea/libraries/Maven__org_mockito_mockito_all_1_10_19.xml
new file mode 100644
--- /dev/null	(date 1620295882679)
+++ b/.idea/libraries/Maven__org_mockito_mockito_all_1_10_19.xml	(date 1620295882679)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mockito:mockito-all:1.10.19">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_javassist_javassist_3_26_0_GA.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_javassist_javassist_3_26_0_GA.xml b/.idea/libraries/Maven__org_javassist_javassist_3_26_0_GA.xml
new file mode 100644
--- /dev/null	(date 1620295882670)
+++ b/.idea/libraries/Maven__org_javassist_javassist_3_26_0_GA.xml	(date 1620295882670)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.javassist:javassist:3.26.0-GA">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/javassist/javassist/3.26.0-GA/javassist-3.26.0-GA.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/javassist/javassist/3.26.0-GA/javassist-3.26.0-GA-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/javassist/javassist/3.26.0-GA/javassist-3.26.0-GA-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml b/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
new file mode 100644
--- /dev/null	(date 1620295882662)
+++ b/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml	(date 1620295882662)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hamcrest:hamcrest-core:1.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__junit_junit_4_13.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__junit_junit_4_13.xml b/.idea/libraries/Maven__junit_junit_4_13.xml
new file mode 100644
--- /dev/null	(date 1620295882653)
+++ b/.idea/libraries/Maven__junit_junit_4_13.xml	(date 1620295882653)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: junit:junit:4.13">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13/junit-4.13.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13/junit-4.13-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13/junit-4.13-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1620331942287)
+++ b/.idea/modules.xml	(date 1620331942287)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/java_basic_exam-hw.iml" filepath="$PROJECT_DIR$/java_basic_exam-hw.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
